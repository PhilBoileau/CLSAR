install.packages("devtools")
library(CLSAR)
install.packages("Rtools")
hello()
install.packages("testthat")
install.packages("roxygen2")
devtools::use_testthat()
library(CLSAR)
install.packages("usethis")
library(usethis)
use_roxygen_md()
v <- c(seq(1, 10), -9, NA)
v
categ <- c(rep("M", 6), rep("F"), 6)
categ <- c(rep("M", 6), rep("F", 6))
categ <- as.factor(c(rep("M", 6), rep("F", 6)))
categ
?aggregate
categ <- c(rep("M", 6), rep("F", 6))
summarize <- function(vect, categories, catname, missingValues = c()){
# compute the summary of the vector values
vectSummary <- as.matrix(aggregate(vect[!(vect %in% missingValues) & !is.na(vect)],
by=list(categories[!(vect %in% missingValues) & !is.na(vect)]), FUN=summary))
# compute the standard deviation of the vector
vectSD <- as.matrix(aggregate(vect[!(vect %in% missingValues) & !is.na(vect)],
by=list(categories[!(vect %in% missingValues) & !is.na(vect)]), FUN=sd))
# count the number of missing values in the vector
vectMiss <- as.matrix(aggregate(vect, by=list(categories),
FUN = (function(x){sum(is.na(x)) + sum(x %in% missingValues)})))
# count the number of non-missing values in the vector
vectNOTMiss <- as.matrix(aggregate(vect, by=list(categories),
FUN = (function(x){length(x)-sum(is.na(x)) - sum(x %in% missingValues)})))
# combine all four calculations
vectAll <- cbind(vectSummary[, -8],vectSD[, 2],vectNOTMiss[, 2], vectMiss[, 2])
colnames(vectAll)<-c(catname, "Min","Q1","Median", "Mean","Q3","Max","SD","# Observations", "# Missing")
# return the dataframe
return(vectAll)
}
sumaryTable <- function(vect, categories, catname, missingValues = c()){
# compute the summary of the vector values
vectSummary <- as.matrix(aggregate(vect[!(vect %in% missingValues) & !is.na(vect)],
by=list(categories[!(vect %in% missingValues) & !is.na(vect)]), FUN=summary))
# compute the standard deviation of the vector
vectSD <- as.matrix(aggregate(vect[!(vect %in% missingValues) & !is.na(vect)],
by=list(categories[!(vect %in% missingValues) & !is.na(vect)]), FUN=sd))
# count the number of missing values in the vector
vectMiss <- as.matrix(aggregate(vect, by=list(categories),
FUN = (function(x){sum(is.na(x)) + sum(x %in% missingValues)})))
# count the number of non-missing values in the vector
vectNOTMiss <- as.matrix(aggregate(vect, by=list(categories),
FUN = (function(x){length(x)-sum(is.na(x)) - sum(x %in% missingValues)})))
# combine all four calculations
vectAll <- cbind(vectSummary[, -8],vectSD[, 2],vectNOTMiss[, 2], vectMiss[, 2])
colnames(vectAll)<-c(catname, "Min","Q1","Median", "Mean","Q3","Max","SD","# Observations", "# Missing")
# return the dataframe
return(vectAll)
}
summaryTable <- function(vect, categories, catname, missingValues = c()){
# compute the summary of the vector values
vectSummary <- as.matrix(aggregate(vect[!(vect %in% missingValues) & !is.na(vect)],
by=list(categories[!(vect %in% missingValues) & !is.na(vect)]), FUN=summary))
# compute the standard deviation of the vector
vectSD <- as.matrix(aggregate(vect[!(vect %in% missingValues) & !is.na(vect)],
by=list(categories[!(vect %in% missingValues) & !is.na(vect)]), FUN=sd))
# count the number of missing values in the vector
vectMiss <- as.matrix(aggregate(vect, by=list(categories),
FUN = (function(x){sum(is.na(x)) + sum(x %in% missingValues)})))
# count the number of non-missing values in the vector
vectNOTMiss <- as.matrix(aggregate(vect, by=list(categories),
FUN = (function(x){length(x)-sum(is.na(x)) - sum(x %in% missingValues)})))
# combine all four calculations
vectAll <- cbind(vectSummary[, -8],vectSD[, 2],vectNOTMiss[, 2], vectMiss[, 2])
colnames(vectAll)<-c(catname, "Min","Q1","Median", "Mean","Q3","Max","SD","# Observations", "# Missing")
# return the dataframe
return(vectAll)
}
summaryTable(v, categ, "Gender", -9)
str(summaryTable(v, categ, "Gender", -9))
library(CLSAR)
usethis::use_mit_license("Phil Boileau")
library(CLSAR)
library(CLSAR)
library(CLSAR)
library(CLSAR)
library(boots)
install.packages("boot")
library(CLSAR)
library(CLSAR)
?summaryTable
library(CLSAR)
library(CLSAR)
